# winrm_services_scan.rc
# Global settings
setg THREADS 50
setg VERBOSE true

ruby << 'END'
# List of scanner modules targeting WINRM
mods = %w[windows_winrm_login windows_winrm_script]

# Collect services from the database
svcs = framework.db.services.where(port: 5985)
svcs += framework.db.services.where(port: 5986)
svcs += framework.db.services.where(["name LIKE ?", "%winrm%"])
svcs.uniq!

# Group services by port and launch each module as a background job
svcs.group_by(&:port).each do |port, services|
  hosts = services.map { |s| s.host.address }.uniq.join(',')
  mods.each do |mod|
    path = "scanner/winrm/#{mod}"
    next unless framework.modules.module_names('auxiliary').include?(path)

    sc = framework.modules.create('auxiliary', path)
    sc.datastore['RHOSTS']   = hosts
    sc.datastore['RPORT']    = port
    sc.datastore['THREADS']  = 50
    sc.datastore['VERBOSE']  = true
    framework.threads.spawn('Msf::Module::Auxiliary', false, sc, false) do
      sc.run_simple('LocalInput' => '', 'LocalOutput' => '')
    end
  end
end
END

# Exit once all jobs are spawned
exit
